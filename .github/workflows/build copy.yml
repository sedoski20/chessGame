name: CMake

on: 
  push:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true
    - name: Install Qt
      uses: jurplel/install-qt-action@v3.0.0

    - name: Install protobuf and grpc
      uses: eWaterCycle/setup-grpc@v5
      with:
        grpc-version: 1.43.0

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      run: ${{github.workspace}}/build/bin/game/ChessGame_tst
      
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
    
    - name: Upload Artifact [Client]
      uses: actions/upload-artifact@v3
      with:
        name: ChessGame_client
        path: ${{github.workspace}}/build/bin/client/ChessGame_client

    - name: Upload Artifact [Server]
      uses: actions/upload-artifact@v3
      with:
        name: ChessGame_server
        path: ${{github.workspace}}/build/bin/server/ChessGame_server

  build-windows:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:

    - name: Clone repository
      uses: actions/checkout@v3
      with: 
        submodules: true

    - name: Install protobuf and grpc
      env:
        GRPC_INSTALL_PATH: "C:/Program Files/grpc/"
      run: |
        echo "Cloning grpc"
        git clone --depth 1 --recurse-submodules --shallow-submodules -b v1.4.3 "https://github.com/grpc/grpc"
        cd grpc
        cd cmake
        mkdir build
        cd build
        cmake -DgRPC_INSTALL=ON -DgRPC_SSL_PROVIDER=package -DgRPC_BUILD_TESTS=OFF -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=${{env.GRPC_INSTALL_PATH}} ../..
        echo "Building grpc"
        cmake --build ./
        echo "Installing grpc in ${{env.GRPC_INSTALL_PATH}}"
        make install
        cd ../../..
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v3.0.0

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      run: ${{github.workspace}}/build/bin/game/ChessGame_tst
      
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
    
    - name: Upload Artifact [Client]
      uses: actions/upload-artifact@v3
      with:
        name: ChessGame_client_x64
        path: ${{github.workspace}}/build/bin/client/ChessGame_client

    - name: Upload Artifact [Server]
      uses: actions/upload-artifact@v3
      with:
        name: ChessGame_server_x64
        path: ${{github.workspace}}/build/bin/server/ChessGame_server

